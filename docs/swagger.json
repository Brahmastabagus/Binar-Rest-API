{
  "openapi": "3.0.3",
  "info": {
    "title": "Challenge 05: Products in shop",
    "description": "This is the documentation of the API created for Challenge Chapter 5 on Binar Academy. If you find an error or have something you want to ask, then contact me on whatsapp.",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "brahmastabagus@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/v1"
    }
  ],
  "tags": [
    {
      "name": "product",
      "description": "Everything about products"
    },
    {
      "name": "shop",
      "description": "Everything about shops"
    },
    {
      "name": "user",
      "description": "Operations about users"
    }
  ],
  "paths": {
    "/users/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Login user into the system",
        "description": "User login with username and password",
        "operationId": "loginUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Anda berhasil login sebagai admin"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/Users"
                        },
                        "token": {
                          "type": "string",
                          "example": "eyjkvinjbjbroikwb"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid username supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Username admin1 tidak ditemukan"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Res400"
                }
              }
            }
          }
        }
      }
    },
    "/users/register": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "This is done to be able to login.",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success Register",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Anda berhasil register sebagai admin"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Users"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Username is already",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Username admin sudah ada"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Res400"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [ ]
          }
        ]
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get users",
        "description": "Get all users.",
        "operationId": "getAllUser",
        "responses": {
          "200": {
            "description": "Success get all users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Users"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Res400"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [ ]
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user",
        "description": "Get user by id.",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success get users by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 10
                        },
                        "username": {
                          "type": "string",
                          "example": "admin"
                        },
                        "password": {
                          "type": "string",
                          "example": "admin123"
                        },
                        "role": {
                          "type": "string",
                          "default": "admin",
                          "enum": [
                            "superadmin",
                            "admin",
                            "customer"
                          ]
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2023-05-04T14:20:27.537Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2023-05-04T14:20:27.537Z"
                        },
                        "shop": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Bagus shop"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "400": {
            "description": "Failed bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Res400"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update user",
        "description": "This is done to be able to login.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success Update user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Data dengan index 2 telah berhasil terupdate"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Username is already",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Username admin sudah ada"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Res400"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "description": "Delete user by id.",
        "operationId": "deleteUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Data dengan index 3 telah berhasil terhapus"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "400": {
            "description": "Failed bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Res400"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [ ]
          }
        ]
      }
    },
    "/shops/": {
      "get": {
        "tags": [
          "shop"
        ],
        "summary": "Get shops",
        "description": "Get all shops.",
        "operationId": "getAllshops",
        "responses": {
          "200": {
            "description": "Success get all shops",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Shops"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Res400"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "shop"
        ],
        "summary": "Create shop",
        "description": "This is done to be able to login.",
        "operationId": "createShop",
        "requestBody": {
          "description": "Created shop object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Shop"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success create shop",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/Shops"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "City is not Purbalingga",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Kota harus Purbalingga"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Res400"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [ ]
          }
        ]
      }
    },
    "/shops/{id}": {
      "get": {
        "tags": [
          "shop"
        ],
        "summary": "Get shop",
        "description": "Get shop by id.",
        "operationId": "getShopById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of shop to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success get shop by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Shops"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "400": {
            "description": "Failed bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Res400"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "shop"
        ],
        "summary": "Update shop",
        "description": "This is done to be able to login.",
        "operationId": "updateShop",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of shop to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated shop object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Shop"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success Update shop",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Data dengan index 2 telah berhasil terupdate"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "City is not Purbalingga",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Kota harus Purbalingga"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "400": {
            "description": "Failed bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Res400"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "shop"
        ],
        "summary": "Delete shop",
        "description": "Delete shop by id.",
        "operationId": "deleteShopById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of shop to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete shop",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Data dengan index 3 telah berhasil terhapus"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "400": {
            "description": "Failed bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Res400"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [ ]
          }
        ]
      }
    },
    "/products/": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Get products",
        "description": "Get all products.",
        "operationId": "getAllproducts",
        "responses": {
          "200": {
            "description": "Success get all products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Products"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Res400"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "product"
        ],
        "summary": "Create product",
        "description": "This is done to be able to login.",
        "operationId": "createProduct",
        "requestBody": {
          "description": "Created product object",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success create product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/Products"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Price must be above 10.000",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Harga harus diatas 10.000"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Res400"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [ ]
          }
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Get product",
        "description": "Get product by id.",
        "operationId": "getProductById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success get product by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Products"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "400": {
            "description": "Failed bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Res400"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "product"
        ],
        "summary": "Update product",
        "description": "This is done to be able to login.",
        "operationId": "updateProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Created product object",
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success Update product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Data dengan index 2 telah berhasil terupdate"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Price must be above 10.000",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "failed"
                    },
                    "message": {
                      "type": "string",
                      "example": "Harga harus diatas 10.000"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "400": {
            "description": "Failed bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Res400"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "product"
        ],
        "summary": "Delete product",
        "description": "Delete product by id.",
        "operationId": "deleteProductById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "Success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Data dengan index 3 telah berhasil terhapus"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Data not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "400": {
            "description": "Failed bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Res400"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": [ ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Login": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "admin"
          },
          "password": {
            "type": "string",
            "example": "admin123"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "admin"
          },
          "password": {
            "type": "string",
            "example": "admin123"
          },
          "role": {
            "type": "string",
            "default": "admin",
            "enum": [
              "superadmin",
              "admin",
              "user"
            ]
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "Users": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "username": {
            "type": "string",
            "example": "admin"
          },
          "password": {
            "type": "string",
            "example": "admin123"
          },
          "role": {
            "type": "string",
            "default": "admin",
            "enum": [
              "superadmin",
              "admin",
              "customer"
            ]
          },
          "createdAt": {
            "type": "string",
            "example": "2023-05-04T14:20:27.537Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-05-04T14:20:27.537Z"
          }
        }
      },
      "Shop": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Bagus shop"
          },
          "city": {
            "type": "string",
            "example": "Purbalingga"
          }
        },
        "required": [
          "name",
          "city"
        ]
      },
      "Shops": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "Bagus shop"
          },
          "city": {
            "type": "string",
            "example": "Purbalingga"
          },
          "userId": {
            "type": "integer",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "example": "2023-05-04T14:20:27.537Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-05-04T14:20:27.537Z"
          }
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Kaos kaki"
          },
          "price": {
            "type": "integer",
            "example": 5000
          },
          "stock": {
            "type": "integer",
            "example": 40
          },
          "imageUrl": {
            "type": "string",
            "format": "binary"
          }
        },
        "required": [
          "name",
          "price",
          "stock",
          "imageUrl"
        ]
      },
      "Products": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "Kaos kaki"
          },
          "price": {
            "type": "integer",
            "example": 5000
          },
          "stock": {
            "type": "integer",
            "example": 40
          },
          "imageUrl": {
            "type": "string",
            "example": "https://ik.imagekit.io/brahmastabagus/IMG-1683214309867_g9PFH5Dme.jpeg"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-05-04T14:20:27.537Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-05-04T14:20:27.537Z"
          },
          "shopId": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "NotFound": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "failed"
          },
          "message": {
            "type": "string",
            "example": "Data dengan id 100, tidak ditemukan"
          }
        }
      },
      "Res400": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "failed"
          },
          "message": {
            "type": "string",
            "example": "Cannot proccess"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}